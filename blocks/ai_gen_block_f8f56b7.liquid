{% doc %}
  @prompt
    images slide show that three wide images displayed that has a list of images to scroll through
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-image-slideshow-{{ ai_gen_id }} {
    width: 100%;
    overflow: hidden;
    position: relative;
    background-color: {{ block.settings.background_color }};
    padding: {{ block.settings.padding }}px 0;
  }

  .ai-image-slideshow__container-{{ ai_gen_id }} {
    max-width: {{ block.settings.max_width }}px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-image-slideshow__viewport-{{ ai_gen_id }} {
    overflow: hidden;
    position: relative;
  }

  .ai-image-slideshow__track-{{ ai_gen_id }} {
    display: flex;
    gap: {{ block.settings.gap }}px;
    transition: transform 0.5s ease;
  }

  .ai-image-slideshow__slide-{{ ai_gen_id }} {
    flex: 0 0 calc((100% - ({{ block.settings.gap }}px * 2)) / 3);
    position: relative;
  }

  .ai-image-slideshow__image-wrapper-{{ ai_gen_id }} {
    width: 100%;
    aspect-ratio: {{ block.settings.aspect_ratio }};
    overflow: hidden;
    border-radius: {{ block.settings.border_radius }}px;
  }

  .ai-image-slideshow__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-image-slideshow__placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-image-slideshow__placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-image-slideshow__empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 12px 20px;
    font-size: 14px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  .ai-image-slideshow__controls-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    margin-top: 30px;
  }

  .ai-image-slideshow__button-{{ ai_gen_id }} {
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    border: none;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.3s ease;
  }

  .ai-image-slideshow__button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
  }

  .ai-image-slideshow__button-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .ai-image-slideshow__button-{{ ai_gen_id }} svg {
    width: 24px;
    height: 24px;
  }

  .ai-image-slideshow__dots-{{ ai_gen_id }} {
    display: flex;
    gap: 10px;
  }

  .ai-image-slideshow__dot-{{ ai_gen_id }} {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_color }};
    border: none;
    cursor: pointer;
    padding: 0;
    transition: background-color 0.3s ease;
  }

  .ai-image-slideshow__dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.dot_active_color }};
  }

  @media screen and (max-width: 989px) {
    .ai-image-slideshow__slide-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - {{ block.settings.gap }}px) / 2);
    }
  }

  @media screen and (max-width: 749px) {
    .ai-image-slideshow__slide-{{ ai_gen_id }} {
      flex: 0 0 100%;
    }

    .ai-image-slideshow__controls-{{ ai_gen_id }} {
      margin-top: 20px;
    }
  }
{% endstyle %}

<image-slideshow-{{ ai_gen_id }} class="ai-image-slideshow-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-image-slideshow__container-{{ ai_gen_id }}">
    <div class="ai-image-slideshow__viewport-{{ ai_gen_id }}">
      <div class="ai-image-slideshow__track-{{ ai_gen_id }}">
        {% for i in (1..9) %}
          {% liquid
            assign image_key = 'image_' | append: i
            assign image = block.settings[image_key]
          %}
          
          {% if image != blank %}
            <div class="ai-image-slideshow__slide-{{ ai_gen_id }}">
              <div class="ai-image-slideshow__image-wrapper-{{ ai_gen_id }}">
                <img
                  src="{{ image | image_url: width: 800 }}"
                  alt="{{ image.alt | escape }}"
                  loading="lazy"
                  width="{{ image.width }}"
                  height="{{ image.height }}"
                  class="ai-image-slideshow__image-{{ ai_gen_id }}"
                >
              </div>
            </div>
          {% endif %}
        {% endfor %}

        {% if block.settings.image_1 == blank and block.settings.image_2 == blank and block.settings.image_3 == blank %}
          {% for i in (1..3) %}
            <div class="ai-image-slideshow__slide-{{ ai_gen_id }}">
              <div class="ai-image-slideshow__image-wrapper-{{ ai_gen_id }}">
                <div class="ai-image-slideshow__placeholder-{{ ai_gen_id }}">
                  {{ 'image' | placeholder_svg_tag }}
                  {% if i == 2 %}
                    <div class="ai-image-slideshow__empty-state-{{ ai_gen_id }}">
                      Next, add images to the slideshow
                    </div>
                  {% endif %}
                </div>
              </div>
            </div>
          {% endfor %}
        {% endif %}
      </div>
    </div>

    <div class="ai-image-slideshow__controls-{{ ai_gen_id }}">
      <button
        class="ai-image-slideshow__button-{{ ai_gen_id }} ai-image-slideshow__button-prev-{{ ai_gen_id }}"
        aria-label="Previous slide"
      >
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="15 18 9 12 15 6"></polyline>
        </svg>
      </button>

      <div class="ai-image-slideshow__dots-{{ ai_gen_id }}"></div>

      <button
        class="ai-image-slideshow__button-{{ ai_gen_id }} ai-image-slideshow__button-next-{{ ai_gen_id }}"
        aria-label="Next slide"
      >
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 18 15 12 9 6"></polyline>
        </svg>
      </button>
    </div>
  </div>
</image-slideshow-{{ ai_gen_id }}>

<script>
  (function() {
    class ImageSlideshow{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentIndex = 0;
        this.slidesPerView = 3;
      }

      connectedCallback() {
        this.track = this.querySelector('.ai-image-slideshow__track-{{ ai_gen_id }}');
        this.slides = Array.from(this.querySelectorAll('.ai-image-slideshow__slide-{{ ai_gen_id }}'));
        this.prevButton = this.querySelector('.ai-image-slideshow__button-prev-{{ ai_gen_id }}');
        this.nextButton = this.querySelector('.ai-image-slideshow__button-next-{{ ai_gen_id }}');
        this.dotsContainer = this.querySelector('.ai-image-slideshow__dots-{{ ai_gen_id }}');

        this.updateSlidesPerView();
        this.createDots();
        this.updateSlidePosition();
        this.updateButtons();

        this.prevButton.addEventListener('click', () => this.prev());
        this.nextButton.addEventListener('click', () => this.next());

        window.addEventListener('resize', () => {
          this.updateSlidesPerView();
          this.createDots();
          this.updateSlidePosition();
          this.updateButtons();
        });
      }

      updateSlidesPerView() {
        const width = window.innerWidth;
        if (width <= 749) {
          this.slidesPerView = 1;
        } else if (width <= 989) {
          this.slidesPerView = 2;
        } else {
          this.slidesPerView = 3;
        }
      }

      createDots() {
        this.dotsContainer.innerHTML = '';
        const totalSlides = this.slides.length;
        const totalPages = Math.max(1, totalSlides - this.slidesPerView + 1);

        for (let i = 0; i < totalPages; i++) {
          const dot = document.createElement('button');
          dot.classList.add('ai-image-slideshow__dot-{{ ai_gen_id }}');
          dot.setAttribute('aria-label', 'Go to slide ' + (i + 1));
          if (i === this.currentIndex) {
            dot.classList.add('active');
          }
          dot.addEventListener('click', () => this.goToSlide(i));
          this.dotsContainer.appendChild(dot);
        }
      }

      updateSlidePosition() {
        const gap = {{ block.settings.gap }};
        const slideWidth = this.slides[0].offsetWidth;
        const offset = -(this.currentIndex * (slideWidth + gap));
        this.track.style.transform = 'translateX(' + offset + 'px)';
        this.updateDots();
      }

      updateDots() {
        const dots = this.dotsContainer.querySelectorAll('.ai-image-slideshow__dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => {
          if (index === this.currentIndex) {
            dot.classList.add('active');
          } else {
            dot.classList.remove('active');
          }
        });
      }

      updateButtons() {
        const totalSlides = this.slides.length;
        const maxIndex = Math.max(0, totalSlides - this.slidesPerView);

        this.prevButton.disabled = this.currentIndex === 0;
        this.nextButton.disabled = this.currentIndex >= maxIndex;
      }

      prev() {
        if (this.currentIndex > 0) {
          this.currentIndex--;
          this.updateSlidePosition();
          this.updateButtons();
        }
      }

      next() {
        const totalSlides = this.slides.length;
        const maxIndex = Math.max(0, totalSlides - this.slidesPerView);

        if (this.currentIndex < maxIndex) {
          this.currentIndex++;
          this.updateSlidePosition();
          this.updateButtons();
        }
      }

      goToSlide(index) {
        this.currentIndex = index;
        this.updateSlidePosition();
        this.updateButtons();
      }
    }

    customElements.define('image-slideshow-{{ ai_gen_id }}', ImageSlideshow{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Image slideshow",
  "settings": [
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "image_picker",
      "id": "image_1",
      "label": "Image 1"
    },
    {
      "type": "image_picker",
      "id": "image_2",
      "label": "Image 2"
    },
    {
      "type": "image_picker",
      "id": "image_3",
      "label": "Image 3"
    },
    {
      "type": "image_picker",
      "id": "image_4",
      "label": "Image 4"
    },
    {
      "type": "image_picker",
      "id": "image_5",
      "label": "Image 5"
    },
    {
      "type": "image_picker",
      "id": "image_6",
      "label": "Image 6"
    },
    {
      "type": "image_picker",
      "id": "image_7",
      "label": "Image 7"
    },
    {
      "type": "image_picker",
      "id": "image_8",
      "label": "Image 8"
    },
    {
      "type": "image_picker",
      "id": "image_9",
      "label": "Image 9"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "max_width",
      "min": 600,
      "max": 1600,
      "step": 100,
      "unit": "px",
      "label": "Maximum width",
      "default": 1200
    },
    {
      "type": "range",
      "id": "padding",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "Padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "gap",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Gap between images",
      "default": 16
    },
    {
      "type": "select",
      "id": "aspect_ratio",
      "label": "Image aspect ratio",
      "options": [
        {
          "value": "1 / 1",
          "label": "Square (1:1)"
        },
        {
          "value": "4 / 3",
          "label": "Landscape (4:3)"
        },
        {
          "value": "16 / 9",
          "label": "Wide (16:9)"
        },
        {
          "value": "3 / 4",
          "label": "Portrait (3:4)"
        }
      ],
      "default": "4 / 3"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 0
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button",
      "default": "#252422"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover",
      "default": "#656d4a"
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Active dot",
      "default": "#252422"
    }
  ],
  "presets": [
    {
      "name": "Image slideshow"
    }
  ]
}
{% endschema %}