{% comment %}
  Hexagon Tessellating Grid Section
  Displays a honeycomb grid with 3 rows and 4 columns, no gaps.
  Each hexagon initially loads a random image from active products.
{% endcomment %}
<div class="hexagon-grid">
  {% assign row_count = 3 %}
  {% assign col_count = 4 %}
  {% for row in (1..row_count) %}
    <div class="hexagon-row">
      {% for col in (1..col_count) %}
        <div class="hexagon">
          <img src="" alt="Product Image">
        </div>
      {% endfor %}
    </div>
  {% endfor %}
</div>

<script>
  // Build an array of product image URLs from all active products
  var productImages = [
    {% for product in collections.all.products %}
      {% if product.featured_image %}
        "{{ product.featured_image | img_url: 'medium' }}"{% unless forloop.last %}, {% endunless %}
      {% endif %}
    {% endfor %}
  ];

  // Helper function to pick a random image
  function randomFromArray(arr) {
    return arr[Math.floor(Math.random() * arr.length)];
  }

  // On page load, assign a random image to each hexagon
  document.addEventListener('DOMContentLoaded', function() {
    var hexagonImages = document.querySelectorAll('.hexagon img');
    hexagonImages.forEach(function(img) {
      img.src = randomFromArray(productImages);
    });
  });

  // Every 3 seconds, update a random hexagon with a new random image
  function updateRandomHexagon() {
    var hexagonImages = document.querySelectorAll('.hexagon img');
    var randomHexIndex = Math.floor(Math.random() * hexagonImages.length);
    hexagonImages[randomHexIndex].src = randomFromArray(productImages);
  }
  setInterval(updateRandomHexagon, 3000);
</script>

{% schema %}
{
  "name": "Hexagon Tessellating Grid",
  "settings": [],
  "presets": [
    {
      "name": "Hexagon Tessellating Grid",
      "category": "Custom"
    }
  ]
}
{% endschema %}
