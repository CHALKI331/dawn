{% schema %}
{
  "name": "Vertical Timeline",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Timeline Heading",
      "default": "Our Journey"
    },
    {
      "type": "select",
      "id": "theme_color",
      "label": "Select Theme Colour",
      "options": [
        { "value": "primary", "label": "Primary Theme Colour" },
        { "value": "secondary", "label": "Secondary Theme Colour" },
        { "value": "accent", "label": "Accent Theme Colour" }
      ],
      "default": "primary"
    }
  ],
  "blocks": [
    {
      "type": "event",
      "name": "Timeline Event",
      "settings": [
        {
          "type": "text",
          "id": "year",
          "label": "Year",
          "default": "Year XXXX"
        },
        {
          "type": "textarea",
          "id": "description",
          "label": "Event Description",
          "default": "Description of a significant event or milestone."
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Vertical Timeline",
      "category": "Text",
      "blocks": [
        { "type": "event" },
        { "type": "event" },
        { "type": "event" }
      ]
    }
  ]
}
{% endschema %}

<div class="vertical_timeline">
  <section class="timeline">
    <h1>{{ section.settings.heading }}</h1>
    <ul class="card_content">
      {% for block in section.blocks %}
        <li>
          <div class="card_data">
            {{ block.settings.year }}: {{ block.settings.description }}
          </div>
        </li>
      {% endfor %}
    </ul>
  </section>
</div>

<style>
  .timeline h1 {
    background-color: #ffffff;
    font-size: 30px;
    font-weight: 600;
    text-align: center;
    color: #000000;
    padding: 50px 0;
    margin: 0;
  }

  .card_content {
    background-color: #eff6ea;
    padding: 50px 0 100px 0;
    margin: 0;
    padding-left: 0;
  }

  .timeline .card_content li {
    list-style-type: none;
    position: relative;
    width: 6px;
    margin: 0 auto;
    padding-top: 50px;
    background-color: var(--color-{{ section.settings.theme_color }});
  }

  .timeline .card_content li::after {
    content: "";
    position: absolute;
    left: 50%;
    bottom: 0;
    transform: translateX(-50%);
    width: 30px;
    height: 30px;
    border-radius: 50%;
    background: var(--color-{{ section.settings.theme_color }});
    z-index: 1;
  }

  .timeline .card_content li .card_data {
    position: relative;
    width: 400px;
    padding: 15px;
    background-color: var(--color-{{ section.settings.theme_color }});
    color: #eff6ea;
    visibility: hidden;
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.5s ease-in-out;
  }

  .timeline .card_content li.in-view .card_data {
    visibility: visible;
    opacity: 1;
    transform: none;
  }

  @media screen and (max-width: 900px) {
    .timeline .card_content li .card_data {
      width: 250px;
    }
  }

  @media screen and (max-width: 600px) {
    .timeline .card_content li {
      margin-left: 20px;
    }
    .timeline .card_content li .card_data {
      width: 100%;
      left: 0 !important;
      text-align: left;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const items = document.querySelectorAll(".timeline li");

    function isElementInViewport(el) {
      const rect = el.getBoundingClientRect();
      return (
        rect.top >= 0 &&
        rect.left >= 0 &&
        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
        rect.right <= (window.innerWidth || document.documentElement.clientWidth)
      );
    }

    function callbackFunc() {
      items.forEach((item) => {
        if (isElementInViewport(item)) {
          item.classList.add("in-view");
        }
      });
    }

    window.addEventListener("load", callbackFunc);
    window.addEventListener("resize", callbackFunc);
    window.addEventListener("scroll", callbackFunc);
  });
</script>
