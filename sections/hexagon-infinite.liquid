{% comment %}
  Infinite Hexagon Honeycomb with Individual Random Fades
  - Displays 4 rows of perfectly tessellated hexagons (150px x 130px) with no gaps.
  - Each hexagon shows a random product image and links to its product page.
  - Each hexagon updates its image (with a fade transition) at a random interval between 5-10 seconds.
  - The grid auto-scrolls horizontally infinitely.
{% endcomment %}

{% assign products_array = collections.all.products %}
{% capture product_data_json %}
[
  {% for product in products_array %}
    {
      "url": "{{ product.url | escape }}",
      "image": "{% if product.featured_image %}{{ product.featured_image | img_url: '400x400' }}{% else %}https://via.placeholder.com/400{% endif %}"
    }{% unless forloop.last %},{% endunless %}
  {% endfor %}
]
{% endcapture %}

{% assign hexagons_per_row = 12 %}

<div class="hexagon-scroll-container">
  <div class="hexagon-grid">
    {% for row in (0..3) %}
      <div class="hexagon-row" data-row="{{ row }}">
        {% for i in (1..hexagons_per_row) %}
          <a href="#" class="hexagon">
            <img src="" alt="Product Image">
          </a>
        {% endfor %}
        {%- comment -%}
          Duplicate row for seamless scrolling
        {%- endcomment -%}
        {% for i in (1..hexagons_per_row) %}
          <a href="#" class="hexagon">
            <img src="" alt="Product Image">
          </a>
        {% endfor %}
      </div>
    {% endfor %}
  </div>
</div>

<script>
  // Parse product data from Liquid into a JS array.
  var productData = {{ product_data_json | strip_newlines }};
  
  // Helper: returns a random product object.
  function getRandomProduct() {
    return productData[Math.floor(Math.random() * productData.length)];
  }
  
  // Schedules an update for a given hexagon with fade-out/in transitions.
  function scheduleHexUpdate(hex) {
    var delay = Math.floor(Math.random() * 5000) + 5000; // Random delay between 5000 and 10000 ms.
    setTimeout(function() {
      // Fade out:
      hex.style.opacity = 0;
      // After fade-out completes (500ms), update image/link and fade back in.
      setTimeout(function() {
        var product = getRandomProduct();
        hex.href = product.url;
        var img = hex.querySelector('img');
        if (img) {
          img.src = product.image;
        }
        hex.style.opacity = 1;
        // Reschedule this hexagon.
        scheduleHexUpdate(hex);
      }, 500);
    }, delay);
  }
  
  document.addEventListener('DOMContentLoaded', function() {
    var hexagons = document.querySelectorAll('.hexagon');
    hexagons.forEach(function(hex) {
      // Set a random product on load:
      var product = getRandomProduct();
      hex.href = product.url;
      var img = hex.querySelector('img');
      if (img) {
        img.src = product.image;
      }
      // Set initial opacity and transition.
      hex.style.opacity = 1;
      hex.style.transition = "opacity 0.5s ease-in-out";
      // Schedule its first update.
      scheduleHexUpdate(hex);
    });
  });
</script>

{% schema %}
{
  "name": "InfHexRandom",
  "settings": [],
  "presets": [
    {
      "name": "InfHexRandom",
      "category": "Custom"
    }
  ]
}
{% endschema %}
